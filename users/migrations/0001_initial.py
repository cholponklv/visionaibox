# Generated by Django 5.1.5 on 2025-04-14 06:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('telegram_id', models.BigIntegerField(blank=True, help_text='Telegram ID пользователя', null=True, unique=True)),
                ('email', models.EmailField(blank=True, help_text='Email пользователя', max_length=254, null=True, unique=True)),
                ('full_name', models.CharField(blank=True, help_text='Полное имя', max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли пользователь')),
                ('is_staff', models.BooleanField(default=False, help_text='Является ли пользователь администратором')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата регистрации')),
                ('telegram_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_security', models.BooleanField(default=False, help_text='Сотрудник службы безопасности')),
                ('is_executive', models.BooleanField(default=False, help_text='Учредитель компании')),
                ('company', models.ForeignKey(blank=True, help_text='Компания пользователя', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='companies.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
